Backbone.View.prototype.l10n=function(str){var lang=this.l10nLang?this.l10nLang:this.router&&this.router.l10nLang?this.router.l10nLang:"en";if(lang=="en")return str;if(this.l10nHash&&this.l10nHash[lang])return this.l10nHash[lang][str]?this.l10nHash[lang][str]:str;else return str};Backbone.View.prototype.l10nLang=undefined;Backbone.Router.prototype.l10nLang="en";Backbone.View.prototype.l10nHash={};Backbone.Collection.prototype.get=function(index,value){if(arguments.length===1){if(index==null)return null;return this._byId[index.id!=null?index.id:index]}else if(arguments.length==2)for(var i=0;i<this.models.length;i++)if(this.models[i].get(index)==value)return this.models[i]};Backbone.Collection.prototype._add=function(model,options){options||(options={});model=this._prepareModel(model,options);if(!model)return false;if(options.expUnique){var already=this.getByCid(model)||this.get(model.id)||this.get(options.expUnique,model.get(options.expUnique));if(already){if(options.error)options.error(model,{errno:"add",msg:"Can't add the same model to a set twice"},options);else this.trigger("error",model,{errno:"add",msg:"Can't add the same model to a set twice"},options);return false}}this._byId[model.id]=
model;this._byCid[model.cid]=model;var index=options.at!=null?options.at:this.comparator?this.sortedIndex(model,this.comparator):this.length;this.models.splice(index,0,model);model.bind("all",this._onModelEvent);this.length++;options.index=index;if(!options.silent)model.trigger("add",model,this,options);return model};Backbone.Model.prototype.toJSONExt=function(opts){opts=opts||{};if(opts.there instanceof Array){var arg=_.clone(this.attributes)||{},arg1={};for(var i in arg)if(_.indexOf(opts.there,i)>=0)arg1[i]=arg[i];return arg1}else if(opts.ignore instanceof Array){var arg=_.clone(this.attributes)||{},arg1={};for(var i in arg)if(_.indexOf(opts.ignore,i)<0)arg1[i]=arg[i];return arg1}else return{}};Backbone.Model.prototype.syncArg={};Backbone.Model.prototype.syncFilter={};Backbone.Collection.prototype.toJSONExt=function(opts){return this.map(function(model){return model.toJSONExt(opts)})};
